# -*- coding: utf-8 -*-
"""Untitled63.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c1qFeAoM_B5jT8p2KJm4j9a3XSmb8FhD
"""

# ==================== STEP 5: EXPORT EXCEL MULTI-ONGLETS ====================
print("\n" + "=" * 70)
print("üìÅ √âTAPE 5: Export Excel Multi-Onglets")
print("=" * 70)

# Excel files preparation
output_filename = 'Monte_Carlo_Supplier_Analysis_Results.xlsx'

with pd.ExcelWriter(output_filename, engine='openpyxl') as writer:

    # Onglet 1: Global view
    overview = df[[
        'supplier', 'country', 'performance_category', 'total_score_performance',
        'total_cost_performance', 'quality_performance_norm', 'delivery_performance_norm',
        'current_allocation', 'supplier_total_cost', 'non_quality_cost', 'late_orders'
    ]].copy()
    overview['current_allocation'] = overview['current_allocation'] * 100
    overview.to_excel(writer, sheet_name='Overview', index=False)

    # Onglet 2: Details allocation
    allocations = df[[
        'supplier', 'performance_category', 'current_allocation',
        'new_allocation_conservative', 'new_allocation_aggressive', 'new_allocation_risk_mitigation'
    ]].copy()
    for col in ['current_allocation', 'new_allocation_conservative', 'new_allocation_aggressive', 'new_allocation_risk_mitigation']:
        allocations[col] = allocations[col] * 100
    allocations.to_excel(writer, sheet_name='Allocations', index=False)

    # Onglet 3: Cost details
    costs = df[[
        'supplier', 'unit_cost_total', 'freight_total_cost', 'non_quality_cost',
        'supplier_total_cost', 'late_orders'
    ]].copy()
    costs.to_excel(writer, sheet_name='Cost_Details', index=False)

    # Onglet 4: Savings summary
    savings_df = pd.DataFrame(savings_results).T
    savings_df.index.name = 'Scenario'
    savings_df.to_excel(writer, sheet_name='Savings_Summary')

    # Onglet 5: Performance metrics
    metrics = df[[
        'supplier', 'unit_cost_applied', 'progressive_discount_rate',
        'conformity_rate_per_po', 'otd_per_po',
        'price_performance_norm', 'quality_performance_norm', 'delivery_performance_norm'
    ]].copy()
    metrics.to_excel(writer, sheet_name='Performance_Metrics', index=False)

print(f"‚úÖ Excel sheets created: {output_filename}")

# T√©l√©chargement du fichier
files.download(output_filename)
print(f"üì• Processing files downloading...")

print("\n" + "=" * 70)
print("‚úÖ ANALYSIS DONE